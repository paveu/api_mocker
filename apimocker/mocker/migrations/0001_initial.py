# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-05 19:11
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='APILog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Create date')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('address', models.URLField(null=True, verbose_name='Called API')),
                ('response', models.TextField(null=True, verbose_name='API Response')),
            ],
            options={
                'verbose_name': 'API Log',
                'verbose_name_plural': 'API Logs',
            },
        ),
        migrations.CreateModel(
            name='Mocker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Create date')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('destination_address', models.URLField(verbose_name='API to mock')),
                ('allowed_http_method', models.CharField(choices=[(b'POST', b'POST'), (b'GET', b'GET'), (b'PATCH', b'PATCH'), (b'PUT', b'PUT'), (b'HEAD', b'HEAD'), (b'OPTIONS', b'OPTIONS')], max_length=256, verbose_name='Allowed HTTP method for mock')),
                ('allowed_content_type', models.CharField(choices=[(b'application/json', 'application/json'), (b'application/x-www-form-urlencoded', 'application/x-www-form-urlencoded'), (b'application/xhtml+xml', 'application/xhtml+xml'), (b'multipart/form-data', 'multipart/form-data'), (b'text/csv', 'text/css'), (b'text/css', 'text/csv'), (b'text/html', 'text/html'), (b'text/json', 'text/json'), (b'text/plain', 'text/plain'), (b'text/xml', 'text/xml')], max_length=256, verbose_name='Allowed content type for mock')),
                ('callback_address', models.URLField(blank=True, null=True, verbose_name='Callback address')),
                ('callback_content_type', models.CharField(blank=True, choices=[(b'application/json', 'application/json'), (b'application/x-www-form-urlencoded', 'application/x-www-form-urlencoded'), (b'application/xhtml+xml', 'application/xhtml+xml'), (b'multipart/form-data', 'multipart/form-data'), (b'text/csv', 'text/css'), (b'text/css', 'text/csv'), (b'text/html', 'text/html'), (b'text/json', 'text/json'), (b'text/plain', 'text/plain'), (b'text/xml', 'text/xml')], max_length=256, null=True, verbose_name='Callback content type')),
                ('mocked_address', models.URLField(blank=True, null=True, verbose_name='Mocked API')),
                ('hashed_id', models.CharField(max_length=128, verbose_name='Hashed ID')),
                ('api_log', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mocker.APILog')),
            ],
            options={
                'verbose_name': 'API Mock',
                'verbose_name_plural': 'API Mocks',
            },
        ),
        migrations.CreateModel(
            name='ResponseSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Create date')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('content_type', models.CharField(choices=[(b'application/json', 'application/json'), (b'application/x-www-form-urlencoded', 'application/x-www-form-urlencoded'), (b'application/xhtml+xml', 'application/xhtml+xml'), (b'multipart/form-data', 'multipart/form-data'), (b'text/csv', 'text/css'), (b'text/css', 'text/csv'), (b'text/html', 'text/html'), (b'text/json', 'text/json'), (b'text/plain', 'text/plain'), (b'text/xml', 'text/xml')], max_length=256, verbose_name='Content type')),
                ('status_code', models.IntegerField(choices=[(200, 200), (400, 400), (401, 401), (402, 402), (403, 403), (500, 500)], verbose_name='HTTP Status code')),
            ],
            options={
                'verbose_name': 'Response setting',
                'verbose_name_plural': 'Response settings',
            },
        ),
        migrations.AddField(
            model_name='mocker',
            name='response_data',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mocker.ResponseSetting'),
        ),
    ]
